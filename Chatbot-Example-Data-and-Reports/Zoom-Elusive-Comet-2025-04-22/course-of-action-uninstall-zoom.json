{
  "type": "course-of-action",
  "spec_version": "2.1",
  "id": "course-of-action--uninstall-zoom",
  "created": "2025-04-22T12:00:00.000Z",
  "modified": "2025-04-22T12:00:00.000Z",
  "name": "Completely Remove Zoom Client and Use Browser Alternatives",
  "description": "This course of action involves completely uninstalling the Zoom desktop client from systems and using browser-based alternatives for video conferencing. By removing the application that contains the vulnerable feature, this approach provides the strongest protection against this specific attack vector. This strategy is particularly recommended for high-security environments, cryptocurrency businesses, or individuals who handle sensitive financial information. The browser-based version of Zoom has a more limited feature set and inherits the browser's security sandbox, which provides stronger isolation from system resources.",
  "external_references": [
    {
      "source_name": "CAVEaT",
      "external_id": "CAVEaT-COA-ZOOM-005",
      "url": "https://github.com/cloudsecurityalliance/caveat/wiki/course-of-action--uninstall-zoom"
    },
    {
      "source_name": "Trail of Bits",
      "description": "Mitigating ELUSIVE COMET Zoom remote control attacks",
      "url": "https://blog.trailofbits.com/2025/04/17/mitigating-elusive-comet-zoom-remote-control-attacks/"
    }
  ],
  "x_caveat_cloud_specific_data": {
    "affected_cloud_providers": [
      {
        "provider_name": "Zoom Cloud Services",
        "affected_services": ["Zoom Meetings"],
        "platform_specific": "All platforms",
        "implementation_complexity": "Low",
        "effectiveness": "High",
        "implementation_instructions": {
          "manual_uninstall_macos": [
            "1. Quit Zoom if it's running",
            "2. Move the Zoom application from the Applications folder to the Trash",
            "3. Empty the Trash",
            "4. Additionally, remove Zoom components and preferences:",
            "5. Delete ~/Library/Application Support/zoom.us",
            "6. Delete ~/Library/Internet Plug-Ins/ZoomUsPlugIn.plugin",
            "7. Delete ~/Library/Preferences/us.zoom.xos.plist",
            "8. Delete ~/Library/Caches/us.zoom.xos",
            "9. Delete ~/Library/Logs/zoom.us",
            "10. Delete ~/Library/Saved Application State/us.zoom.xos.savedState"
          ],
          "script_uninstall_macos": [
            "1. Create a bash script named 'uninstall_zoom.bash' with the following content:",
            "```bash",
            "#!/bin/bash",
            "",
            "# Script to completely uninstall Zoom",
            "# Set up logging",
            "LOG_FILE=\"/var/log/zoom_uninstall.log\"",
            "touch \"$LOG_FILE\"",
            "chmod 644 \"$LOG_FILE\"",
            "",
            "log_message() {",
            "  echo \"$(date '+%Y-%m-%d %H:%M:%S') - $1\" >> \"$LOG_FILE\"",
            "}",
            "",
            "log_message \"Starting Zoom uninstallation process\"",
            "",
            "# Kill any running Zoom processes",
            "pkill \"zoom.us\" || true",
            "pkill \"ZoomOpener\" || true",
            "log_message \"Terminated any running Zoom processes\"",
            "",
            "# Remove the Zoom application",
            "if [ -d \"/Applications/zoom.us.app\" ]; then",
            "  rm -rf \"/Applications/zoom.us.app\"",
            "  log_message \"Removed Zoom application from /Applications\"",
            "fi",
            "",
            "# Remove for all users",
            "for USER_HOME in /Users/*; do",
            "  if [ -d \"$USER_HOME\" ]; then",
            "    USER_NAME=$(basename \"$USER_HOME\")",
            "    log_message \"Removing Zoom components for user: $USER_NAME\"",
            "    ",
            "    # Remove Application Support files",
            "    if [ -d \"$USER_HOME/Library/Application Support/zoom.us\" ]; then",
            "      rm -rf \"$USER_HOME/Library/Application Support/zoom.us\"",
            "      log_message \"Removed Application Support files for $USER_NAME\"",
            "    fi",
            "    ",
            "    # Remove Internet Plugins",
            "    if [ -d \"$USER_HOME/Library/Internet Plug-Ins/ZoomUsPlugIn.plugin\" ]; then",
            "      rm -rf \"$USER_HOME/Library/Internet Plug-Ins/ZoomUsPlugIn.plugin\"",
            "      log_message \"Removed Internet Plugins for $USER_NAME\"",
            "    fi",
            "    ",
            "    # Remove Preferences",
            "    if [ -f \"$USER_HOME/Library/Preferences/us.zoom.xos.plist\" ]; then",
            "      rm -f \"$USER_HOME/Library/Preferences/us.zoom.xos.plist\"",
            "      log_message \"Removed Preferences for $USER_NAME\"",
            "    fi",
            "    ",
            "    # Remove Caches",
            "    if [ -d \"$USER_HOME/Library/Caches/us.zoom.xos\" ]; then",
            "      rm -rf \"$USER_HOME/Library/Caches/us.zoom.xos\"",
            "      log_message \"Removed Caches for $USER_NAME\"",
            "    fi",
            "    ",
            "    # Remove Logs",
            "    if [ -d \"$USER_HOME/Library/Logs/zoom.us\" ]; then",
            "      rm -rf \"$USER_HOME/Library/Logs/zoom.us\"",
            "      log_message \"Removed Logs for $USER_NAME\"",
            "    fi",
            "    ",
            "    # Remove Saved Application State",
            "    if [ -d \"$USER_HOME/Library/Saved Application State/us.zoom.xos.savedState\" ]; then",
            "      rm -rf \"$USER_HOME/Library/Saved Application State/us.zoom.xos.savedState\"",
            "      log_message \"Removed Saved Application State for $USER_NAME\"",
            "    fi",
            "  fi",
            "done",
            "",
            "# Remove any LaunchAgents or LaunchDaemons",
            "launchd_items=(\"~/Library/LaunchAgents/us.zoom.ZoomOpener.plist\" \"/Library/LaunchDaemons/us.zoom.ZoomDaemon.plist\")",
            "for item in \"${launchd_items[@]}\"; do",
            "  expanded_item=$(eval echo \"$item\")",
            "  if [ -f \"$expanded_item\" ]; then",
            "    launchctl unload \"$expanded_item\" 2>/dev/null || true",
            "    rm -f \"$expanded_item\"",
            "    log_message \"Removed LaunchAgent/Daemon: $expanded_item\"",
            "  fi",
            "done",
            "",
            "log_message \"Zoom uninstallation completed successfully\"",
            "```",
            "2. Make the script executable: chmod +x uninstall_zoom.bash",
            "3. Run the script with administrative privileges: sudo ./uninstall_zoom.bash"
          ],
          "manual_uninstall_windows": [
            "1. Close Zoom if it's running",
            "2. Open Control Panel > Programs > Programs and Features",
            "3. Select Zoom and click Uninstall",
            "4. Follow the uninstallation prompts",
            "5. Additionally, remove the Zoom folders in:",
            "6. C:\\Users\\[username]\\AppData\\Roaming\\Zoom",
            "7. C:\\Users\\[username]\\AppData\\Local\\Zoom",
            "8. C:\\ProgramData\\Zoom"
          ],
          "script_uninstall_windows": [
            "1. Create a PowerShell script named 'Uninstall-Zoom.ps1' with the following content:",
            "```powershell",
            "# Script to completely uninstall Zoom",
            "$LogFile = \"C:\\Windows\\Logs\\ZoomUninstall.log\"",
            "",
            "function Write-Log {",
            "    param([string]$Message)",
            "    $Timestamp = Get-Date -Format \"yyyy-MM-dd HH:mm:ss\"",
            "    \"$Timestamp - $Message\" | Out-File -FilePath $LogFile -Append",
            "}",
            "",
            "Write-Log \"Starting Zoom uninstallation process\"",
            "",
            "# Stop any running Zoom processes",
            "Get-Process -Name \"Zoom*\" -ErrorAction SilentlyContinue | Stop-Process -Force",
            "Write-Log \"Terminated any running Zoom processes\"",
            "",
            "# Uninstall Zoom using the official uninstaller if it exists",
            "$uninstaller = \"C:\\Program Files\\Zoom\\uninstall\\Installer.exe\"",
            "if (Test-Path $uninstaller) {",
            "    Write-Log \"Running Zoom uninstaller\"",
            "    Start-Process -FilePath $uninstaller -ArgumentList \"/uninstall /quiet\" -Wait",
            "    Write-Log \"Zoom uninstaller completed\"",
            "}",
            "",
            "# Alternative uninstall method using WMI",
            "$app = Get-WmiObject -Class Win32_Product | Where-Object { $_.Name -like \"*Zoom*\" }",
            "if ($app) {",
            "    Write-Log \"Uninstalling Zoom via WMI\"",
            "    $app.Uninstall()",
            "    Write-Log \"WMI uninstallation completed\"",
            "}",
            "",
            "# Remove Zoom directories",
            "$zoomPaths = @(",
            "    \"C:\\Program Files\\Zoom\",",
            "    \"C:\\Program Files (x86)\\Zoom\",",
            "    \"C:\\ProgramData\\Zoom\"",
            ")",
            "",
            "foreach ($path in $zoomPaths) {",
            "    if (Test-Path $path) {",
            "        Write-Log \"Removing Zoom directory: $path\"",
            "        Remove-Item -Path $path -Recurse -Force -ErrorAction SilentlyContinue",
            "    }",
            "}",
            "",
            "# Remove Zoom from all user profiles",
            "$userProfiles = Get-ChildItem \"C:\\Users\" -Directory",
            "foreach ($profile in $userProfiles) {",
            "    $userName = $profile.Name",
            "    Write-Log \"Removing Zoom components for user: $userName\"",
            "    ",
            "    $userZoomPaths = @(",
            "        \"$($profile.FullName)\\AppData\\Roaming\\Zoom\",",
            "        \"$($profile.FullName)\\AppData\\Local\\Zoom\",",
            "        \"$($profile.FullName)\\AppData\\LocalLow\\Zoom\"",
            "    )",
            "    ",
            "    foreach ($path in $userZoomPaths) {",
            "        if (Test-Path $path) {",
            "            Write-Log \"Removing user Zoom directory: $path\"",
            "            Remove-Item -Path $path -Recurse -Force -ErrorAction SilentlyContinue",
            "        }",
            "    }",
            "}",
            "",
            "# Remove Zoom registry entries",
            "$registryPaths = @(",
            "    \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\ZoomUMX\",",
            "    \"HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\ZoomUMX\",",
            "    \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\Zoom\",",
            "    \"HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\Zoom\"",
            ")",
            "",
            "foreach ($path in $registryPaths) {",
            "    if (Test-Path $path) {",
            "        Write-Log \"Removing registry entry: $path\"",
            "        Remove-Item -Path $path -Recurse -Force -ErrorAction SilentlyContinue",
            "    }",
            "}",
            "",
            "Write-Log \"Zoom uninstallation completed successfully\"",
            "```",
            "2. Run the script with administrative privileges:",
            "   - Right-click on the script file",
            "   - Select 'Run with PowerShell'",
            "   - Confirm any UAC prompts"
          ],
          "mdm_deployment": [
            "1. Package the uninstallation script for your platform (macOS or Windows)",
            "2. Deploy the package through your MDM solution to all managed devices",
            "3. Set up a recurring check to ensure Zoom remains uninstalled",
            "4. Configure your MDM to prevent future installations of Zoom"
          ],
          "browser_alternative_configuration": [
            "1. Communicate to users that they should use the browser-based version of Zoom at https://zoom.us/join",
            "2. Provide clear instructions for joining meetings via browser:",
            "   - Click on the meeting link provided by the host",
            "   - When prompted to open the Zoom app, select 'Cancel'",
            "   - Click on 'Join from your browser' or 'Launch meeting' link",
            "   - Sign in with your Zoom credentials if required",
            "3. Document any feature limitations of the browser version compared to the desktop client",
            "4. Consider deploying browser policies that whitelist only specific video conferencing domains"
          ],
          "verification_steps": [
            "1. Verify that the Zoom application is no longer present in the Applications folder (macOS) or Programs list (Windows)",
            "2. Check that Zoom-related files have been removed from user directories",
            "3. Attempt to join a Zoom meeting with a meeting link and confirm it opens in the browser",
            "4. Verify that users cannot install the Zoom client without administrative privileges"
          ]
        }
      }
    ],
    "implementation_considerations": {
      "prerequisites": "Administrative access to systems; communication plan for users",
      "potential_impacts": "Loss of some Zoom functionality available only in the desktop client; potential user confusion or resistance",
      "alternative_workflows": "Consider alternative video conferencing platforms with stronger security models; for organizations that must use Zoom for some purposes, implement strict controls on which systems can have the client installed"
    },
    "mitigation_effectiveness": {
      "coverage": "Complete elimination of the attack vector on systems where Zoom is uninstalled",
      "limitations": "Requires ongoing enforcement to prevent reinstallation; browser-based alternative still requires careful scrutiny of meeting links for phishing attempts"
    }
  }
}
