Please take the following text and categorize it,m the categories and informaiton about them will follow after the text and a line of = like =====================================
 
(© 2022 The MITRE Corporation All Rights Reserved. Draft Content 
Submission for Consideration by the CAVEAT Working Group) 
 Credentials in Files (version 1.1) 
 
Cloud Service Label: IaaS, PaaS 
 
Description 
Adversaries may search local file systems and remote file shares or registries for files 
containing passwords. These can be files created by users to store their own 
credentials, shared credential stores for a group of individuals, configuration files 
containing passwords for a system or service, or source code/binary files containing 
embedded passwords. It is possible to extract passwords from backups or saved virtual 
machines through Credential Dumping. 
In cloud environments, authenticated user credentials are often stored in local 
configuration and credential files. Developers may also embed cloud resource 
credentials in code to streamline the access of data from a database or file store 
believing the co ntent all traffic will be contained within the cloud. In some cases, these 
credentials can be collected and reused on another machine or the contents can be 
read and then used to authenticate without needing to copy any files. In some scenarios 
adversaries can use credentials found in files to perform lateral movement. 
 
Examples 
Name Description 
CVE-2019 -1003062 
 Jenkins AWS CloudWatch Logs Publisher Plugin stores credentials unencrypted in 
job config.xml files on the Jenkins master. These credentials can be viewed by 
users with Extended Read permission, or access to the master file system. 
 
Mitigations 
Mitigation Description 
Audit Frequently check permissions on cloud storage to ensure proper permissions are 
set to deny open or unprivileged access to resources. Consider using automated 
resource checkers such as CloudSploit or Divvycloud. 
 AWS To perform an audit via AWS it is suggested to review information such as account 
details (credentials, users, groups, roles, etc), mobile applications, EC2 
(© 2022 The MITRE Corporation All Rights Reserved. Draft Content 
Submission for Consideration by the CAVEAT Working Group) 
 configurations, policies, and account activity. How to audit these different factors 
can be found in detail at: https://docs.aws.amazon.com/general/latest/gr/aws -
security -audit -guide.html. 
 Azure To perform an audit via Azure an administrator can review the audit logs that are 
recorded under Azure’s monitoring for active directory. The audit logs allow for 
filtering, as well as looking at users, groups, and enterprise specific information. 
Full deta ils on how to access this information can be found at: 
https://docs.microsoft.com/en -us/azure/active -directory/reports -
monitoring/concept -audit -logs. 
 GCP To perform an audit via GCP the logs can be reviewed. GCP breaks this down into 
three categories; admin activity, data access, and system events. The audit logs 
can be viewed a few different ways - the console, API, or gcloud. Full details on how 
to view th ese logs, how to export, and for how to configure the retention period can 
be found here: https://cloud.google.com/logging/docs/audit. 
Password Policies Establish an organizational policy that requires good password practices. This 
includes that passwords are never stored in plaintext. 
 AWS Good password practices can be enforced in AWS via the console, AWS CLI, and 
AWS API. These configurations are for IAM accounts only and have a range of 
different characteristics that can be enforced. For instance minimum password 
length, require a range o f characters (lowercase, uppercase, number, and non 
alphanumeric ), allow users to change their own password, password expiration, 
prevent password reuse, and require administrator reset after password expiration. 
All details on how to configure these enfo rcement policies with all three 
management systems can be found here: 
https://docs.aws.amazon.com/IAM/latest/UserGuide/id\_credentials\_password
s\_account -policy.html . 
 Azure Good password practices can be enforced in Azure with Azure Active Directory 
using the resource manager deployment. By default these accounts have some 
policies enforced including amount of lockout duration, and allowed number of 
logon attempts. Other policies that can be changed are minimum password length 
and the ability to enforce the concept of ‘passwords complexity requirements’. 
These configurations can be accomplished by accessing the Active Directory 
Administrative Center under administra tive tools, then editing the rules under the 
settings for the Password Settings Container. Full details on how to accomplish this 
can be found here: https://docs.microsoft.com/en -us/azure/active -directory -
domain -services/password -policy 
Restrict File and Directory 
Permissions 
 Users should have limited access to files and directories depending on their need 
for access. The file and directory permissions should be restricted on the basis of 
least privilege. 
 AWS To manage the files and directory permissions in AWS, IAM policies can be used. 
This can be done by utilizing group policies and policy variables. The policy would 
be created specifying the folder, then the permissions attached to that folder 
(whether the user has access to list out the objects within the directory, if they have 
read permissions, if they have write permissions, etc.), lastly the group that it 
applies to would be specified. The users can that be added and removed from that 
group as needed. F ull details on how this can be done is explained here: 
https://aws.amazon.com/blogs/security/writing -iam-policies -grant -access -to-
user -specific -folders -in-an-amazon -s3-bucket/. 
 Azure To manage the files and directory permissions in an Azure environment basic and 
advanced system defined controls. This will be dependent on the type of system 
being used (Windows, Linux, etc). The permissions will be set individually or by 
group using the system commands or controls needed.. Full details on how this can 
be done is explained here: https://docs.microsoft.com/en -
us/azure/storage/files/storage -files-identity -ad-ds-configure -permissions. 
Use Metadata Service Applications can use the metadata service accessible on the local interface to 
obtain 
application tokens to access cloud resources. In Azure for example 
GET ' http://169.254.169.254/metadata/identity/oauth2/token?api -version=2018 -02-
01 
&resource=https://management.azure.com/' HTTP/1.1 Metadata: true 
(© 2022 The MITRE Corporation All Rights Reserved. Draft Content 
Submission for Consideration by the CAVEAT Working Group) 
 User Training Ensure that developers and system administrators are aware of the risk associated 
with having plaintext passwords in software files that may be on endpoint systems 
or servers. 
 
Detection 
While detecting adversaries accessing these files may be difficult without knowing they 
exist in the first place, it may be possible to detect adversary use of credentials and the 
suspicious activities they undertake with them. Consumers may also wish to m onitor the 
command -line arguments of executing processes for suspicious words or regular 
expressions that may indicate searching for a password (for example: password, pwd, 
login, secure, or credentials). Audit application code for embedded passwords or ke ys. 
 
Detection of activities after exploit Description 
Create Log Metric Filters and Alarms for AWS To create a metric filter and alarm: 
1. Create a metric filter that checks for IAM policy 
changes and the  
2. Create an SNS topic 
3. Create an SNS subscription to the above topic 
4. Create an alarm associated with the filter and SNS 
topic created in steps 1 and 2 respectively 
Monitor Activity in AWS Account Various services in AWS offer logging features that allow for 
detection capabilities. These include CloudFront, CloudTrail, 
CloudWatch, Config, and S3. 
Monitor for Suspicious Activity in Azure Azure AD can generate anomaly reports than can be run on 
a daily basis. Azure AD Identity Protection show current risks 
in its dashboard and provides daily email summary 
notifications. Policies can also be configured to alert to 
specific issues. 
Create Log Metric Filters and Alarms for CloudTrail To create a metric filter and alarm: 
1. Create a filter that checks for CloudTrail changes 
and the specific  
2. Create an SNS topic that the alarm will notify 
3. Create an SNS subscription to the above topic 
4. Create an alarm associated with the filter from 
step 1 and SNS topic in step 2 
Create Activity Log Alerts in Azure To create log activity alerts for deletion in the Azure 
Console: 
1. Navigate to Monitor’ / ‘Alerts 
2. Select Manage alert rules 
3. Click on the Alert Name where Condition contains 
operationName equals 
Microsoft.Network/networkSecurityGroups/securit
yRules/delete 
4. Hover a mouse over Condition to ensure it is set to 
Whenever the Administrative Activity Log “Delete 
Security Rule 
(networkSecurityGroups/securityRules)” has “any” 
(© 2022 The MITRE Corporation All Rights Reserved. Draft Content 
Submission for Consideration by the CAVEAT Working Group) 
 level with “any” status and event is initiated by 
“any” 
Create, View, and Manage Activity Alerts in Azure Monitor To create a log alert in the Azure portal: 
1. Select Monitor -> Alerts 
2. Select New alert rule of the Alerts window 
3. Provide information in Define alert condition 
4. Provide details in Define alert details 
5. Specify action group for new alert rule under 
Action group , or create a new action group with + 
New group 
6. Select Yes for the Enable rule upon creation 
option 
7. Select Create alert rule 
 
To view and manage alerts: 
1. Select Monitor -> Alerts -> Manage alert rules 
2. Select the rule you want to modify and double -
click to edit the rule options 
3. Click Save 
Azure Resource Manager Templates Azure Resource Manager templates in the format of JSON 
files that can be used to configure metric alerts in Azure 
Monitor. These templates can be used for simple static and 
dynamic threshold metric alerts, availability tests, and 
monitoring multiple resour ces. 
Enable CloudTrail across all regions in AWS To enable CloudTrail across all regions: 
1. Sign into the AWS Management Console and open 
the CloudTrail console 
2. Click on Trails 
3. Set necessary Trails to All option in the I column 
4. Click on a trail via the link Name column 
5. Set Logging to ON 
6. Set Apply trail to all regions to Yes 
Configure log profile to capture activity logs for all regions in 
Azure To set up activity logs for all regions: 
1. Navigate to Azure console 
2. Go to Activity log 
3. Select Export 
4. Select Subscription 
5. Check Select all in Regions 
6. Select Save 
 
 
References 
1. https://cve.mitre.org/cgi -bin/cvename.cgi?name=CVE -2019 -1003062. Retrieved 
June 7, 2020. 
 
(© 2022 The MITRE Corporation All Rights Reserved. Draft Content 
Submission for Consideration by the CAVEAT Working Group) 

=======================================

Collection: The adversary is trying to gather data of interest to their goal. Collection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to steal (exfiltrate) the data. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.
Command and Control: The adversary is trying to communicate with compromised systems to control them. Command and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim’s network structure and defenses.
Credential Access: The adversary is trying to steal account names and passwords. Credential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.
Defense Evasion: The adversary is trying to avoid being detected. Defense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics’ techniques are cross-listed here when those techniques include the added benefit of subverting defenses.
Discovery: The adversary is trying to figure out your environment. Discovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what’s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective.
Evasion: The adversary is trying to avoid security defenses. Evasion consists of techniques that adversaries use to avoid technical defenses throughout their campaign. Techniques used for evasion include removal of indicators of compromise, spoofing communications, and exploiting software vulnerabilities. Adversaries may also leverage and abuse trusted devices and processes to hide their activity, possibly by masquerading as master devices or native software. Methods of defense evasion for this purpose are often more passive in nature.
Execution: The adversary is trying to run malicious code. Execution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery.
Exfiltration: The adversary is trying to steal data. Exfiltration consists of techniques that adversaries may use to steal data from your network. Once they’ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.
Fraud: The adversary is trying to obtain service without contractually paying for it
Impact: The adversary is trying to manipulate, interrupt, or destroy your systems and data. Impact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries’ goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.
Impair Process Control: The adversary is trying to manipulate, disable, or damage physical control processes. Impair Process Control consists of techniques that adversaries use to disrupt control logic and cause determinantal effects to processes being controlled in the target environment. Targets of interest may include active procedures or parameters that manipulate the physical environment. These techniques can also include prevention or manipulation of reporting elements and control logic. If an adversary has modified process functionality, then they may also obfuscate the results, which are often self-revealing in their impact on the outcome of a product or the environment. The direct physical control these techniques exert may also threaten the safety of operators and downstream users, which can prompt response mechanisms. Adversaries may follow up with or use Inhibit Response Function techniques in tandem, to assist with the successful abuse of control processes to result in Impact.
Inhibit Response Function: The adversary is trying to prevent your safety, protection, quality assurance, and operator intervention functions from responding to a failure, hazard, or unsafe state. Inhibit Response Function consists of techniques that adversaries use to hinder the safeguards put in place for processes and products. This may involve the inhibition of safety, protection, quality assurance, or operator intervention functions to disrupt safeguards that aim to prevent the loss of life, destruction of equipment, and disruption of production. These techniques aim to actively deter and prevent expected alarms and responses that arise due to statuses in the ICS environment. Adversaries may modify or update system logic, or even outright prevent responses with a denial-of-service. They may result in the prevention, destruction, manipulation, or modification of programs, logic, devices, and communications. As prevention functions are generally dormant, reporting and processing functions can appear fine, but may have been altered to prevent failure responses in dangerous scenarios. Unlike Evasion, Inhibit Response Function techniques may be more intrusive, such as actively preventing responses to a known dangerous scenario. Adversaries may use these techniques to follow through with or provide cover for Impact techniques.
Initial Access: The adversary is trying to get into your network. Initial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords.
Lateral Movement: The adversary is trying to move through your environment. Lateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. Following through on their primary objective often requires exploring the network to find their target and subsequently gaining access to it. Reaching their objective often involves pivoting through multiple systems and accounts to gain. Adversaries might install their own remote access tools to accomplish Lateral Movement or use legitimate credentials with native network and operating system tools, which may be stealthier.
ML Attack Staging: The adversary is leveraging their knowledge of and access to the target system to tailor the attack. ML Attack Staging consists of techniques adversaries use to prepare their attack on the target ML model. Techniques can include training proxy models, poisoning the target model, and crafting adversarial data to feed the target model. Some of these techniques can be performed in an offline manner and are thus difficult to mitigate. These techniques are often used to achieve the adversary's end goal.
ML Model Access: The adversary is attempting to gain some level of access to a machine learning model. ML Model Access enables techniques that use various types of access to the machine learning model that can be used by the adversary to gain information, develop attacks, and as a means to input data to the model. The level of access can range from the full knowledge of the internals of the model to access to the physical environment where data is collected for use in the machine learning model. The adversary may use varying levels of model access during the course of their attack, from staging the attack to impacting the target system. Access to an ML model may require access to the system housing the model, the model may be publically accessible via an API, or it may be accessed indirectly via interaction with a product or service that utilizes ML as part of its processes.
Persistence: The adversary is trying to maintain their foothold. Persistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code.
Privilege Escalation: The adversary is trying to gain higher-level permissions. Privilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: SYSTEM/root level, local administrator, user account with admin-like access, user accounts with access to specific system or perform specific function. These techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.
Reconnaissance: The adversary is trying to gather information they can use to plan future operations. Reconnaissance consists of techniques that involve adversaries actively or passively gathering information that can be used to support targeting. Such information may include details of the victim organization, infrastructure, or staff/personnel. This information can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using gathered information to plan and execute Initial Access, to scope and prioritize post-compromise objectives, or to drive and lead further Reconnaissance efforts.
Resource Development: The adversary is trying to establish resources they can use to support operations. Resource Development consists of techniques that involve adversaries creating, purchasing, or compromising/stealing resources that can be used to support targeting. Such resources include infrastructure, accounts, or capabilities. These resources can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using purchased domains to support Command and Control, email accounts for phishing as a part of Initial Access, or stealing code signing certificates to help with Defense Evasion.
